"""empty message

Revision ID: 4d362d31b782
Revises: de83f3c59756
Create Date: 2019-03-19 21:58:49.612901

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4d362d31b782'
down_revision = 'de83f3c59756'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_time', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_time', sa.DateTime(), nullable=False, comment='最近更新时间'),
    sa.Column('deleted', sa.Boolean(), nullable=False, comment='是否删除'),
    sa.Column('username', sa.String(length=32), nullable=False, comment='用户名'),
    sa.Column('email', sa.String(length=254), nullable=False, comment='邮箱'),
    sa.Column('password_hash', sa.String(length=128), nullable=False, comment='密码'),
    sa.Column('avatar_url', sa.String(length=256), nullable=True, comment='头像URL'),
    sa.Column('bio', sa.String(length=200), nullable=True, comment='个人简介'),
    sa.Column('group', sa.SmallInteger(), nullable=True, comment='用户组'),
    sa.Column('last_login', sa.DateTime(), nullable=False, comment='上次登录时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.drop_index('ix_side_bar_creator_id', table_name='side_bar')
    op.drop_table('side_bar')
    op.drop_table('users')
    op.drop_table('message')
    op.add_column('category', sa.Column('author_id', sa.Integer(), nullable=False, comment='用户的ID'))
    op.create_index(op.f('ix_category_author_id'), 'category', ['author_id'], unique=False)
    op.drop_constraint('category_name_creator_id_key', 'category', type_='unique')
    op.drop_index('ix_category_creator_id', table_name='category')
    op.create_unique_constraint(None, 'category', ['author_id', 'name', 'deleted'])
    op.drop_column('category', 'creator_id')
    op.drop_column('category', 'is_nav')
    op.drop_index('ix_link_creator_id', table_name='link')
    op.drop_column('link', 'creator_id')
    op.add_column('tag', sa.Column('author_id', sa.Integer(), nullable=False, comment='用户的ID'))
    op.create_index(op.f('ix_tag_author_id'), 'tag', ['author_id'], unique=False)
    op.drop_index('ix_tag_creator_id', table_name='tag')
    op.drop_constraint('tag_name_creator_id_key', 'tag', type_='unique')
    op.create_unique_constraint(None, 'tag', ['name'])
    op.create_unique_constraint(None, 'tag', ['author_id', 'name', 'deleted'])
    op.drop_column('tag', 'creator_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tag', sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='用户的ID'))
    op.drop_constraint(None, 'tag', type_='unique')
    op.drop_constraint(None, 'tag', type_='unique')
    op.create_unique_constraint('tag_name_creator_id_key', 'tag', ['name', 'creator_id'])
    op.create_index('ix_tag_creator_id', 'tag', ['creator_id'], unique=False)
    op.drop_index(op.f('ix_tag_author_id'), table_name='tag')
    op.drop_column('tag', 'author_id')
    op.add_column('link', sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='外键，用户的ID'))
    op.create_index('ix_link_creator_id', 'link', ['creator_id'], unique=False)
    op.add_column('category', sa.Column('is_nav', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否为导航'))
    op.add_column('category', sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='外键，用户的ID'))
    op.drop_constraint(None, 'category', type_='unique')
    op.create_index('ix_category_creator_id', 'category', ['creator_id'], unique=False)
    op.create_unique_constraint('category_name_creator_id_key', 'category', ['name', 'creator_id'])
    op.drop_index(op.f('ix_category_author_id'), table_name='category')
    op.drop_column('category', 'author_id')
    op.create_table('message',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='最近更新时间'),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否删除'),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='外键，发送消息的用户ID'),
    sa.Column('recipient_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='外键，接收消息的用户ID'),
    sa.Column('body', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='内容'),
    sa.PrimaryKeyConstraint('id', name='message_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='最近更新时间'),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否删除'),
    sa.Column('nickname', sa.VARCHAR(length=32), autoincrement=False, nullable=False, comment='昵称'),
    sa.Column('email', sa.VARCHAR(length=64), autoincrement=False, nullable=False, comment='邮箱'),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False, comment='密码'),
    sa.Column('avatar_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True, comment='头像URL'),
    sa.Column('bio', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='个人简历'),
    sa.Column('role', sa.SMALLINT(), autoincrement=False, nullable=True, comment='用户角色'),
    sa.Column('last_message_read_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='读最近一次消息的时间'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('nickname', name='users_nickname_key')
    )
    op.create_table('side_bar',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='最近更新时间'),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否删除'),
    sa.Column('title', sa.VARCHAR(length=60), autoincrement=False, nullable=False, comment='标题'),
    sa.Column('content', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='内容'),
    sa.Column('display_type', sa.SMALLINT(), autoincrement=False, nullable=False, comment='展示类型'),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False, comment='状态'),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='用户的ID'),
    sa.PrimaryKeyConstraint('id', name='side_bar_pkey')
    )
    op.create_index('ix_side_bar_creator_id', 'side_bar', ['creator_id'], unique=False)
    op.drop_table('auth_user')
    # ### end Alembic commands ###
