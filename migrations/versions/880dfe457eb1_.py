"""empty message

Revision ID: 880dfe457eb1
Revises: 553736fc1724
Create Date: 2018-07-15 19:34:28.914458

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '880dfe457eb1'
down_revision = '553736fc1724'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utc_created', sa.DateTime(), nullable=True),
    sa.Column('utc_updated', sa.DateTime(), nullable=True),
    sa.Column('is_enable', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('article',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utc_created', sa.DateTime(), nullable=True),
    sa.Column('utc_updated', sa.DateTime(), nullable=True),
    sa.Column('is_enable', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('body_text', sa.Text(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(length=120), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utc_created', sa.DateTime(), nullable=True),
    sa.Column('utc_updated', sa.DateTime(), nullable=True),
    sa.Column('is_enable', sa.Boolean(), nullable=True),
    sa.Column('body', sa.String(length=200), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('article_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('comments')
    op.drop_index('ix_articles_title', table_name='articles')
    op.drop_table('articles')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('articles_id_seq'::regclass)"), nullable=False),
    sa.Column('utc_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('utc_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('body_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('view_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_enable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='articles_author_id_fkey'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='articles_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='articles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_articles_title', 'articles', ['title'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('categories_id_seq'::regclass)"), nullable=False),
    sa.Column('utc_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('utc_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_enable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_categories_name', 'categories', ['name'], unique=True)
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('utc_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('utc_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('body_text', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('is_enable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('article_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], name='comments_article_id_fkey'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='comments_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.drop_table('comment')
    op.drop_table('article')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
